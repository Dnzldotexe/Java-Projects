/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package manuell;

import java.io.FileWriter;
import java.io.IOException;
import java.sql.Timestamp;
import javax.swing.JOptionPane;

/**
 *
 * @author Russel
 */
public class secondd extends javax.swing.JFrame {

    /**
     * Creates new form second
     */
    public secondd() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        surname = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        month = new javax.swing.JTextField();
        day = new javax.swing.JTextField();
        year = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        horoscope = new javax.swing.JTextField();
        submit = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        strength = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        strength1 = new javax.swing.JTextField();

        jLabel3.setText("jLabel3");

        jTextField6.setText("jTextField6");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel1.setText("NAME");

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel2.setText("SURNAME");

        jLabel4.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel4.setText("BIRTHDATE:");

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel5.setText("DAY");

        jLabel6.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel6.setText("MONTH");

        jLabel7.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel7.setText("YEAR");

        jLabel8.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel8.setText("HOROSCOPE:");

        horoscope.setEditable(false);
        horoscope.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        horoscope.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        horoscope.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                horoscopeActionPerformed(evt);
            }
        });

        submit.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        submit.setText("SUBMIT");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        clear.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        clear.setText("CLEAR");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel9.setText("You're a / an :");

        jLabel10.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel10.setText("Strenght :");

        strength.setEditable(false);
        strength.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        strength.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        strength.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                strengthActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel11.setText("Weaknesses :");

        strength1.setEditable(false);
        strength1.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        strength1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        strength1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                strength1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(strength)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(name, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(9, 9, 9)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(month))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(36, 36, 36)
                                                .addComponent(jLabel5)
                                                .addGap(42, 42, 42)
                                                .addComponent(jLabel7))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(day, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(0, 371, Short.MAX_VALUE))
                            .addComponent(surname, javax.swing.GroupLayout.Alignment.LEADING))
                        .addContainerGap(19, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(strength1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(horoscope))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(surname, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(day, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(horoscope, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(strength1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(strength, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void horoscopeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_horoscopeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_horoscopeActionPerformed

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
       
        try{
        
       try(FileWriter writer = new FileWriter("HoroscopeRecord",true)){ 
           //variables
        String name1 = name.getText();
        String surname1= surname.getText();
        //String month2 = month.getText();
        //String day2 = day.getText();
        String year1 = year.getText();
           
        
        
        int dayInput = (int) Double.parseDouble(day.getText());
        
        String month2 = month.getText();
        
        
        switch (month2) {
    case "January": case "1": case "january": case "01":
        if (dayInput > 31) {
            horoscope.setText("Invalid Day");
        } else if (dayInput < 20) {
            horoscope.setText("Capricorn");
        } else {
            horoscope.setText("Aquarius");
        }
        break;
    case "February": case "2": case "february": case "02":
        if (dayInput > 28) {
            horoscope.setText("Invalid Day");
        } else if (dayInput < 19) {
            horoscope.setText("Aquarius");
        } else {
            horoscope.setText("Pisces");
        }
        break;
    case "March": case "3": case "march": case "03":
        if (dayInput > 31) {
            horoscope.setText("Invalid Day");
        } else if (dayInput < 21) {
            horoscope.setText("Pisces");
        } else {
            horoscope.setText("Aries");
        }
        break;
    case "April": case "4": case "april": case "04":
        if (dayInput > 30) {
            horoscope.setText("Invalid Day");
        } else if (dayInput < 20) {
            horoscope.setText("Aries");
        } else {
            horoscope.setText("Taurus");
        }
        break;
    case "May": case "5": case "may": case "05":
        if (dayInput > 31) {
            horoscope.setText("Invalid Day");
        } else if (dayInput < 21) {
            horoscope.setText("Taurus");
        } else {
            horoscope.setText("Gemini");
        }
        break;
    case "June": case "6": case "june": case "06":
        if (dayInput > 30) {
            horoscope.setText("Invalid Day");
        } else if (dayInput < 22) {
            horoscope.setText("Gemini");
        } else {
            horoscope.setText("Cancer");
        }
        break;
    case "July": case "7": case "july": case "07":
        if (dayInput > 31) {
            horoscope.setText("Invalid Day");
        } else if (dayInput < 23) {
            horoscope.setText("Cancer");
        } else {
            horoscope.setText("Leo");
        }
        break;
    case "August": case "8": case "august": case "08":
        if (dayInput > 31) {
            horoscope.setText("Invalid Day");
        } else if (dayInput < 23) {
            horoscope.setText("Leo");
        } else {
            horoscope.setText("Virgo");
        }
        break;
    case "September": case "9": case "september": case "09":
        if (dayInput > 30) {
            horoscope.setText("Invalid Day");
        } else if (dayInput < 23) {
            horoscope.setText("Virgo");
        } else {
            horoscope.setText("Libra");
        }
        break;
    case "October": case "10": case "october":
        if (dayInput > 31) {
            horoscope.setText("Invalid Day");
        } else if (dayInput < 24) {
            horoscope.setText("Libra");
        } else {
            horoscope.setText("Scorpio");
        }
        break;
    case "November": case "11": case "november":
        if (dayInput > 30) {
            horoscope.setText("Invalid Day");
        } else if (dayInput < 22) {
            horoscope.setText("Scorpio");
        } else {
            horoscope.setText("Sagittarius");
        }
        break;
    case "December": case "12": case "december":
        if (dayInput > 31) {
            horoscope.setText("Invalid Day");
        } else if (dayInput < 22) {
            horoscope.setText("Sagittarius");
        } else {
            horoscope.setText("Capricorn");
        }
        break; 
            
    default:
        horoscope.setText("Invalid Month");
        
        
    }
        
        
        
        // convert string to a int
        //double month1 = Double.parseDouble(month.getText());
        //double day1 = Double.parseDouble(day.getText());
        
            
        
        //else if statement(determine horoscope)
            /*if((month1 == 3 && day1 >= 21)||(month1 == 4 && day1 <= 19 ))
             {
           horoscope.setText("Aries");
             }
           else if((month1 == 4 && day1 >= 20)||(month1 == 5 && day1 <= 20 ))
             {
           horoscope.setText("Taurus");
             }
           else if((month1 == 5 && day1 >= 21)||(month1 == 6 && day1 <= 20 ))
             {
           horoscope.setText("Gemini");
             }
           else if((month1 == 6 && day1 >= 21)||(month1 == 7 && day1 <= 22 ))
             {
           horoscope.setText("Cancer");
             }
           else if((month1 == 7 && day1 >= 23)||(month1 == 8 && day1 <= 22 ))
             {
           horoscope.setText("leo");
             }
           else if((month1 == 8 && day1 >= 23)||(month1 == 9 && day1 <= 22 ))
             {
           horoscope.setText("Virgo");
             }
           else if((month1 == 9 && day1 >= 23)||(month1 == 10 && day1 <= 22 ))
             {
           horoscope.setText("libra");
             }
           else if((month1 == 10 && day1 >= 23)||(month1 == 11 && day1 <= 21 ))
             {
           horoscope.setText("Scorpio");
             }
           else if((month1 == 11 && day1 >= 22)||(month1 == 12 && day1 <= 21 ))
             {
           horoscope.setText("Sagittarius");
             }
           else if((month1 == 12 && day1 >= 22)||(month1 == 1 && day1 <= 19 ))
             {
           horoscope.setText("Capricorn");
             }
           else if((month1 == 1 && day1 >= 20)||(month1 == 2 && day1 <= 18 ))
             {
           horoscope.setText("Aquarius");
             }
           else if((month1 == 2 && day1 >= 19)||(month1 == 3 && day1 <= 20 ))
             {
           horoscope.setText("Pisces");
             }
           else
           {
           horoscope.setText("invalid input");
           }*/
            
           String horoscope1 = horoscope.getText();
           
         writer.write("\n"+name1.toUpperCase()); // get the name info        
         writer.write("\t"+ surname1.toUpperCase());
         writer.write("\r\n");
         writer.write("\n Birthday:");
         writer.write("\nMonth:"+ month2);
         writer.write("\t Day:"+ dayInput);
         writer.write("\tYear:"+ year1);
         writer.write("\r\n");
         writer.write("\n Horoscope: "+ horoscope1);
         writer.write("\r\n");
         writer.write("\r\n");    
         writer.write(new Timestamp(new java.util.Date().getTime()).toString());
         writer.write("\r\n");
         writer.write("\r\n");
         writer.write("\r\n");
         writer.write("\r\n");
         writer.write("\r\n");
         writer.close();
           
            
             /*
        Reference:
        https://www.tutorialspoint.com/java-program-to-display-astrological-sign-or-zodiac-sign-for-given-date-of-birth

        https://algoritmosurgentes.com/algorithm-in-java-lenguaje-using-joptionpane/astrological-sign

        https://www.astrology-zodiac-signs.com/
        
        
        */
            
            
       }// end of try2
       
      catch(IOException e)
       {
           
       }
       
    }// end of try1
         catch(NumberFormatException a)
       {
       JOptionPane.showMessageDialog(clear, "You input non-numeric value.\n\nPlease try again!");
        name.setText("");
        surname.setText("");
        month.setText("");
        day.setText("");
        year.setText("");
        horoscope.setText("");
       }
      
       
       
       
       
       
       
       
    }//GEN-LAST:event_submitActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        name.setText("");
        surname.setText("");
        month.setText("");
        day.setText("");
        year.setText("");
        horoscope.setText("");
        
    }//GEN-LAST:event_clearActionPerformed

    private void strengthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_strengthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_strengthActionPerformed

    private void strength1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_strength1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_strength1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(secondd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(secondd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(secondd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(secondd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new secondd().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clear;
    private javax.swing.JTextField day;
    private javax.swing.JTextField horoscope;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField month;
    private javax.swing.JTextField name;
    private javax.swing.JTextField strength;
    private javax.swing.JTextField strength1;
    private javax.swing.JButton submit;
    private javax.swing.JTextField surname;
    private javax.swing.JTextField year;
    // End of variables declaration//GEN-END:variables
}
