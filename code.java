
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package horoscope.zodiac.sign;

import javax.swing.JOptionPane;

/**
 *
 * @author Russel
 */
public class first extends javax.swing.JFrame {

    /**
     * Creates new form first
     */
    public first() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        password = new javax.swing.JPasswordField();
        login = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        show = new javax.swing.JCheckBox();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel1.setText("PASSWORD");

        password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordActionPerformed(evt);
            }
        });

        login.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        login.setText("LOGIN");
        login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginActionPerformed(evt);
            }
        });

        clear.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        clear.setText("CLEAR");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        show.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        show.setText("Show Password");
        show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(show)
                    .addComponent(jLabel1)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(login, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(show)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(login, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    private void passwordActionPerformed(java.awt.event.ActionEvent evt) {                                         
         //password.setEchoChar('•');
    }                                        

    private void loginActionPerformed(java.awt.event.ActionEvent evt) {                                      
        //variable
        String pass = password.getText();
        //condition statement
        if(pass.equals("stem12a"))
        {
        
         second fr = new second();
            fr.show(); //shows the next frame
            dispose(); //exits the frame if the new frame is open
        }
        else
        {
        JOptionPane.showMessageDialog(clear, "Incorrect Password"); //joptionpane shows message if the password is incorrect
        password.setText(""); // clear the input password in the textfield
        }
       
    }                                     

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {                                      
        password.setText(""); //clear button
    }                                     

    private void showActionPerformed(java.awt.event.ActionEvent evt) {                                     
        //password.setEchoChar('•');
        // password input is set to *
        if(show.isSelected())
        {
        password.setEchoChar((char)0);
        }
        else
        {
        password.setEchoChar('*');
        }
    }                                    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(first.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(first.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(first.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(first.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new first().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton clear;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton login;
    private javax.swing.JPasswordField password;
    private javax.swing.JCheckBox show;
    // End of variables declaration                   
}












	












/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package horoscope.zodiac.sign;

import java.io.FileWriter;
import java.io.IOException;
import java.sql.Timestamp;
import javax.swing.JOptionPane;

/**
 *
 * @author Russel
 */
public class second extends javax.swing.JFrame {

    /**
     * Creates new form second
     */
    public second() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        surname = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        month = new javax.swing.JTextField();
        day = new javax.swing.JTextField();
        year = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        horoscope = new javax.swing.JTextField();
        submit = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        weaknesses = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        strength = new javax.swing.JTextField();

        jLabel3.setText("jLabel3");

        jTextField6.setText("jTextField6");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel1.setText("NAME");

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel2.setText("SURNAME");

        jLabel4.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel4.setText("BIRTHDATE:");

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel5.setText("DAY");

        jLabel6.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel6.setText("MONTH");

        jLabel7.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel7.setText("YEAR");

        jLabel8.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel8.setText("HOROSCOPE ZODIAC SIGN :");

        horoscope.setEditable(false);
        horoscope.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        horoscope.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        horoscope.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                horoscopeActionPerformed(evt);
            }
        });

        submit.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        submit.setText("SUBMIT");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        clear.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        clear.setText("CLEAR");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel9.setText("You're a / an :");

        jLabel10.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel10.setText("Strength :");

        weaknesses.setEditable(false);
        weaknesses.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        weaknesses.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        weaknesses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                weaknessesActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel11.setText("Weaknesses :");

        strength.setEditable(false);
        strength.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        strength.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        strength.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                strengthActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(weaknesses)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(day, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(16, 16, 16)
                                        .addComponent(jLabel7))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(210, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(strength, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(horoscope))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(name, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(surname))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(surname, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(day, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(horoscope, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(strength, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(weaknesses, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    private void horoscopeActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {                                       
       
       
        
       try(FileWriter writer = new FileWriter("HoroscopeRecord",true)){ 
           //variables
        String name1 = name.getText();
        String surname1= surname.getText();
        String month2 = month.getText();
        String year1 = year.getText();
        
     int dayInput = (int) Double.parseDouble(day.getText()); //convert string to double and double to int
        
        String monthname = month.getText();
        
        //switch case if the user input the months in the textfield and shows the horoscope
        switch (month2) {
    case "January": case "1": case "january": case "01":
        if (dayInput > 31) { 
            JOptionPane.showMessageDialog(clear, "Invalid day"); //shows the error message if the day is greater than 31
            day.setText("");
            strength.setText("");
            weaknesses.setText("");
            horoscope.setText("Invalid");
        } else if (dayInput < 20) {
            horoscope.setText("Capricorn ♑");
            strength.setText("Responsible, Disciplined");
            weaknesses.setText("Know-it-all, Unforgiving");
        } else {
           horoscope.setText("Aquarius ♒");
           strength.setText("Progressive, original ");
           weaknesses.setText("Runs from emotional expression");
        }
        break;
    case "February": case "2": case "february": case "02":
        if (dayInput > 29) {
            JOptionPane.showMessageDialog(clear, "Invalid day");//shows the error message if the day is greater than 31
            day.setText("");
            strength.setText("");
            weaknesses.setText("");
            horoscope.setText("Invalid");
        } else if (dayInput < 19) {
           horoscope.setText("Aquarius ♒");
           strength.setText("Progressive, original ");
           weaknesses.setText("Runs from emotional expression");
        } else {
           horoscope.setText("Pisces ♓");
           strength.setText("Compassionate, Artistic");
           weaknesses.setText("Fearful, Overly trusting");
        }
        break;
    case "March": case "3": case "march": case "03":
        if (dayInput > 31) {
            JOptionPane.showMessageDialog(clear, "Invalid day");//shows the error message if the day is greater than 31
            day.setText("");
            strength.setText("");
            weaknesses.setText("");
            horoscope.setText("Invalid");
        } else if (dayInput < 21) {
           horoscope.setText("Pisces ♓");
           strength.setText("Compassionate, Artistic");
           weaknesses.setText("Fearful, Overly trusting");
        } else {
           horoscope.setText("Aries ♈");
           strength.setText("Courageous, Determined");
           weaknesses.setText("Short-tempered, Impulsive");
        }
        break;
    case "April": case "4": case "april": case "04":
        if (dayInput > 30) {
            JOptionPane.showMessageDialog(clear, "Invalid day");//shows the error message if the day is greater than 31
            day.setText("");
            strength.setText("");
            weaknesses.setText("");
            horoscope.setText("Invalid");
        } else if (dayInput < 20) {
           horoscope.setText("Aries ♈");
           strength.setText("Courageous, Determined");
           weaknesses.setText("Short-tempered, Impulsive");
        } else {
           horoscope.setText("Taurus ♉");
           strength.setText("Practical, Devoted, Responsible");
           weaknesses.setText("Stubborn, Possessive");
        }
        break;
    case "May": case "5": case "may": case "05":
        if (dayInput > 31) {
            JOptionPane.showMessageDialog(clear, "Invalid day");//shows the error message if the day is greater than 31
            day.setText("");
            strength.setText("");
            weaknesses.setText("");
            horoscope.setText("Invalid");
        } else if (dayInput < 21) {
           horoscope.setText("Taurus ♉");
           strength.setText("Practical, Devoted, Responsible");
           weaknesses.setText("Stubborn, Possessive");
        } else {
           horoscope.setText("Gemini ♊");
           strength.setText("Ability to learn quickly and exchange ideas");
           weaknesses.setText("Nervous, Inconsistent");
        }
        break;
    case "June": case "6": case "june": case "06":
        if (dayInput > 30) {
           JOptionPane.showMessageDialog(clear, "Invalid day");//shows the error message if the day is greater than 31
            day.setText("");
            strength.setText("");
            weaknesses.setText("");
            horoscope.setText("Invalid");
        } else if (dayInput < 22) {
           horoscope.setText("Gemini ♊");
           strength.setText("Ability to learn quickly and exchange ideas");
           weaknesses.setText("Nervous, Inconsistent");
        } else {
           horoscope.setText("Cancer ♋");
           strength.setText("Tenacious, Highly imaginative ");
           weaknesses.setText("Suspicious, Manipulative");
        }
        break;
    case "July": case "7": case "july": case "07":
        if (dayInput > 31) {
            JOptionPane.showMessageDialog(clear, "Invalid day");//shows the error message if the day is greater than 31
            day.setText("");
            strength.setText("");
            weaknesses.setText("");
            horoscope.setText("Invalid");
        } else if (dayInput < 23) {
           horoscope.setText("Cancer ♋");
           strength.setText("Tenacious, Highly imaginative ");
           weaknesses.setText("Suspicious, Manipulative");
        } else {
            horoscope.setText("leo ♌");
           strength.setText("Creative, Passionate");
           weaknesses.setText("Self-centered, Lazy");
        }
        break;
    case "August": case "8": case "august": case "08":
        if (dayInput > 31) {
            JOptionPane.showMessageDialog(clear, "Invalid day");//shows the error message if the day is greater than 31
            day.setText("");
            strength.setText("");
            weaknesses.setText("");
            horoscope.setText("Invalid");
        } else if (dayInput < 23) {
           horoscope.setText("leo ♌");
           strength.setText("Creative, Passionate");
           weaknesses.setText("Self-centered, Lazy");
        } else {
           horoscope.setText("Virgo ♍");
           strength.setText("Loyal, Analytical");
           weaknesses.setText("Overly critical of self and others");
        }
        break;
    case "September": case "9": case "september": case "09":
        if (dayInput > 30) {
            JOptionPane.showMessageDialog(clear, "Invalid day");//shows the error message if the day is greater than 31
            day.setText("");
            strength.setText("");
            weaknesses.setText("");
            horoscope.setText("Invalid");
        } else if (dayInput < 23) {
           horoscope.setText("Virgo ♍");
           strength.setText("Loyal, Analytical");
           weaknesses.setText("Overly critical of self and others");
        } else {
           horoscope.setText("libra ♎");
           strength.setText("Cooperative, Diplomatic");
           weaknesses.setText("Avoids confrontations");
        }
        break;
    case "October": case "10": case "october":
        if (dayInput > 31) {
            JOptionPane.showMessageDialog(clear, "Invalid day");//shows the error message if the day is greater than 31
            day.setText("");
            strength.setText("");
            weaknesses.setText("");
            horoscope.setText("Invalid");
        } else if (dayInput < 24) {
           horoscope.setText("libra ♎");
           strength.setText("Cooperative, Diplomatic");
           weaknesses.setText("Avoids confrontations");
        } else {
           horoscope.setText("Scorpio ♏");
           strength.setText("Resourceful, Powerful");
           weaknesses.setText("Distrusting, jealous");
        }
        break;
    case "November": case "11": case "november":
        if (dayInput > 30) {
            JOptionPane.showMessageDialog(clear, "Invalid day");//shows the error message if the day is greater than 31
            day.setText("");
            strength.setText("");
            weaknesses.setText("");
            horoscope.setText("Invalid");
        } else if (dayInput < 22) {
           horoscope.setText("Scorpio ♏");
           strength.setText("Resourceful, Powerful");
           weaknesses.setText("Distrusting, jealous");
        } else {
           horoscope.setText("Sagittarius ♐");
           strength.setText("Generous, Idealistic");
           weaknesses.setText("Promises more than can deliver");
        }
        break;
    case "December": case "12": case "december":
        if (dayInput > 31) {
            JOptionPane.showMessageDialog(clear, "Invalid day");//shows the error message if the day is greater than 31
            day.setText("");
            strength.setText("");
            weaknesses.setText("");
            horoscope.setText("Invalid");
        } else if (dayInput < 22) {
           horoscope.setText("Sagittarius ♐");
           strength.setText("Generous, Idealistic");
           weaknesses.setText("Promises more than can deliver");
        } else {
            horoscope.setText("Capricorn ♑");
            strength.setText("Responsible, Disciplined");
            weaknesses.setText("Know-it-all, Unforgiving");
        }
        break; 
            
    default:
       JOptionPane.showMessageDialog(clear, "Invalid Month"); //shows the error if the month is incorrect
           
           month.setText("");
           horoscope.setText("Invalid");
           strength.setText("");
           weaknesses.setText("");
        
        
    }
            
          String horoscope1 = horoscope.getText(); //get the text from the textfield
           
         writer.write("\n"+name1.toUpperCase()); // get the name info        
         writer.write("\t"+ surname1.toUpperCase());
         writer.write("\r\n");
         writer.write("\n Birthday:");
         writer.write("\r\n");
         writer.write("\nMonth:"+ month2.toUpperCase());
         writer.write("\t Day:"+ dayInput);
         writer.write("\tYear:"+ year1);
         writer.write("\r\n");
         writer.write("\n Horoscope: "+ horoscope1);
         writer.write("\r\n");
         writer.write("\r\n");    
         writer.write(new Timestamp(new java.util.Date().getTime()).toString()); //shows the time stamp
         writer.write("\r\n");
         writer.write("\r\n");
         writer.write("\r\n");
         writer.write("\r\n");
         writer.write("\r\n");
         writer.close();
           
            
             /*
        Reference:
        https://www.tutorialspoint.com/java-program-to-display-astrological-sign-or-zodiac-sign-for-given-date-of-birth

        https://algoritmosurgentes.com/algorithm-in-java-lenguaje-using-joptionpane/astrological-sign

        https://www.astrology-zodiac-signs.com/
        
        
        */
             
             /*
             
             Leader: Russel Panaligan
             Members:
             Timmy Parañal
             Danziel Cempron
             France Jay Caloring
             Ian Catalla
             Richard Nardo
             Ena Marie Gapas
             Jashryl Aguspina
             
             */
            
            
       }// end of try1
       
      catch(IOException e)
       {
           
       }
       
       
       
       
       
       
       
       
    }                                      

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {                                      
        name.setText(""); //clear the inputs
        surname.setText("");
        month.setText("");
        day.setText("");
        year.setText("");
        horoscope.setText("");
        strength.setText("");
        weaknesses.setText("");
        
    }                                     

    private void weaknessesActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void strengthActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(second.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(second.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(second.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(second.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new second().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton clear;
    private javax.swing.JTextField day;
    private javax.swing.JTextField horoscope;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField month;
    private javax.swing.JTextField name;
    private javax.swing.JTextField strength;
    private javax.swing.JButton submit;
    private javax.swing.JTextField surname;
    private javax.swing.JTextField weaknesses;
    private javax.swing.JTextField year;
    // End of variables declaration                   
}
